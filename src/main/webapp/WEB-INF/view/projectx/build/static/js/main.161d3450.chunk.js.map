{"version":3,"sources":["ImageUpload.js","Images.js","Main.js","App.js","index.js"],"names":["ImageUpload","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","imageChosen","event","setState","picture","target","files","uploadImage","data","FormData","append","state","fetch","method","body","then","response","ok","json","Error","message","alert","catch","error","react_default","a","createElement","type","accept","onChange","onClick","Component","Images","deleteImage","imageName","status","componentDidMount","console","log","Item","value","MyList","items","map","item","src","base64","height","auth","uploader","name","split","slice","join","images","_this2","responseData","length","user","admin","isAuthenticated","authenticate","cb","getRole","signout","headers","Accept","Content-Type","username","role","authorities","AuthButton","withRouter","_ref","history","push","PrivateRoute","_ref2","component","rest","objectWithoutProperties","Route","assign","render","Redirect","to","pathname","from","location","Public","Protected","Login","redirectToReferrer","password","login","preventDefault","handleInputChange","bind","assertThisInitialized","defineProperty","onSubmit","React","Register","_this3","handleSubmit","Auth","BrowserRouter","Link","path","App","Main","src_App","document","getElementById"],"mappings":"mQA+CeA,cA3CX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAIVQ,YAAc,SAAAC,GACVR,EAAKS,SAAS,CACVC,QAASF,EAAMG,OAAOC,MAAM,MAPjBZ,EAWnBa,YAAc,WACV,IAAIC,EAAO,IAAIC,SACfD,EAAKE,OAAO,OAAQhB,EAAKiB,MAAMP,SAC/BQ,MAAM,eAAgB,CAClBC,OAAQ,OACRC,KAAMN,IACPO,KAAK,SAACC,GACL,OAAIA,EAASC,GAGFD,EAFAA,EAASE,SAGrBH,KAAK,SAACC,GACL,GAAIA,EAASC,GACR,OAAOD,EADK,MAAM,IAAIG,MAAMH,EAASI,WAE3CL,KAAK,SAACP,GACDa,MAAM,oBACXC,MAAM,SAACC,GACFF,MAAME,MA1Bd7B,EAAKiB,MAAQ,CAAEP,QAAS,MAFTV,wEAiCf,OACI8B,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOC,KAAK,OAAOC,OAAO,uBAAuBC,SAAUhC,KAAKI,cAC5DuB,EAAAC,EAAAC,cAAA,UAAQI,QAASjC,KAAKU,aAAtB,kBAtCUwB,aCmEXC,cA/DX,SAAAA,EAAYvC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmC,IACftC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqC,GAAAhC,KAAAH,KAAMJ,KAkBVwC,YAAc,SAACC,GACXtB,MAAM,gBAAkBsB,EAAW,CAC/BrB,OAAQ,WACTE,KAAK,SAACC,GACL,GAAIA,EAASC,GACR,OAAOD,EADK,MAAM,IAAIG,MAAMH,EAASmB,UAE3CpB,KAAK,SAACP,GACLd,EAAK0C,sBACNd,MAAM,SAACC,GACNc,QAAQC,IAAI,UAAYf,MA5Bb7B,EAiClB6C,KAAO,SAAC9C,GACL,OAAO+B,EAAAC,EAAAC,cAAA,UAAKjC,EAAM+C,QAlCH9C,EAqCnB+C,OAAS,SAACC,GACN,OACIlB,EAAAC,EAAAC,cAAA,WACKgB,EAAMC,IAAI,SAACC,GAAD,OACPpB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKmB,IAAK,0BAA4BD,EAAKE,OAAQC,OAAQ,MAAMvB,EAAAC,EAAAC,cAAA,WAChEhC,EAAKD,MAAMuD,KAAOxB,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,yBAAiBkB,EAAKK,UAAgBzB,EAAAC,EAAAC,cAAA,WAC1DF,EAAAC,EAAAC,cAAA,yBAAiBkB,EAAKM,KAAKC,MAAM,KAAKC,MAAM,GAAI,GAAGC,KAAK,MAC5D7B,EAAAC,EAAAC,cAAA,UAAQI,QAAS,kBAAIpC,EAAKuC,YAAYW,EAAKM,QAA3C,WAA0E1B,EAAAC,EAAAC,cAAA,gBA3C1FhC,EAAKiB,MAAQ,CAAE2C,OAAQ,IAFR5D,mFAIC,IAAA6D,EAAA1D,KAChBe,MAAM,eAAgB,CAClBC,OAAQ,QAEPE,KAAK,SAACC,GACP,GAAuB,KAAnBA,EAASmB,OACT,OAAOnB,EAASE,SAGnBH,KAAK,SAACyC,GACHD,EAAKpD,SAAS,CAACmD,OAAQE,uCAsC/B,OAAK3D,KAAKc,MAAM2C,QAAWzD,KAAKc,MAAM2C,OAAOG,OAGzCjC,EAAAC,EAAAC,cAAA,WACK7B,KAAK4C,OAAO5C,KAAKc,MAAM2C,SAHrB,YAxDEvB,aCoCrB,IAAMiB,EAAO,CACTU,KAAM,GACNC,OAAO,EACPC,iBAAiB,EACjBC,aAJS,SAIIC,GACTjE,KAAK+D,iBAAkB,EACvB/D,KAAKkE,QAAQD,IAEjBE,QARS,SAQDF,GACJjE,KAAK6D,KAAO,GACZ7D,KAAK8D,OAAQ,EACb9D,KAAK+D,iBAAkB,EACvBE,KAEJC,QAdS,SAcDD,GAAG,IAAApE,EAAAG,KACPe,MAAM,SAAU,CACZC,OAAQ,MACRoD,QAAS,CACLC,OAAU,mBACVC,eAAgB,sBAErBpD,KAAK,SAACC,GACL,GAAwB,MAApBA,EAASmB,OACT,OAAOnB,EAASE,SAGnBH,KAAK,SAACyC,GACH9D,EAAKgE,KAAOF,EAAaY,UACtB1E,EAAK2E,KAA4C,eAArCb,EAAac,YAAY,GAAGpB,QACvCxD,EAAKiE,OAAQ,GACjBG,QAKVS,EAAaC,YACf,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,QAAH,OACI1B,EAAKY,gBACDpC,EAAAC,EAAAC,cAAA,oBACasB,EAAKU,KADlB,IAEIlC,EAAAC,EAAAC,cAAA,UACII,QAAS,WACLkB,EAAKgB,QAAQ,kBAAMU,EAAQC,KAAK,SAFxC,aASJnD,EAAAC,EAAAC,cAAA,qCAIZ,SAASkD,EAATC,GAAyD,IAAtB9C,EAAsB8C,EAAjCC,UAAyBC,EAAQpF,OAAAqF,EAAA,EAAArF,CAAAkF,EAAA,eACrD,OACIrD,EAAAC,EAAAC,cAACuD,EAAA,EAADtF,OAAAuF,OAAA,GACQH,EADR,CAEII,OAAQ,SAAA1F,GAAK,OACTuD,EAAKY,gBACDpC,EAAAC,EAAAC,cAACK,EAADpC,OAAAuF,OAAA,GAAezF,EAAf,CAAsBuD,KAAMA,EAAKW,SAEjCnC,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CACIC,GAAI,CACAC,SAAU,SACV3E,MAAO,CAAE4E,KAAM9F,EAAM+F,iBASjD,SAASC,IACL,OAAOjE,EAAAC,EAAAC,cAAA,oBAGX,SAASgE,IACL,OAAOlE,EAAAC,EAAAC,cAAA,2BAGLiE,cAQF,SAAAA,EAAYlG,GAAO,IAAA8D,EAAA,OAAA5D,OAAAC,EAAA,EAAAD,CAAAE,KAAA8F,IACfpC,EAAA5D,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgG,GAAA3F,KAAAH,KAAMJ,KAPVkB,MAAQ,CACAiF,oBAAoB,EACpBxB,SAAU,GACVyB,SAAU,IAGCtC,EAWnBuC,MAAQ,SAAC5F,GACLA,EAAM6F,iBACN,IAAMvF,EAAO,IAAIC,SAASP,EAAMG,QAChCO,MAAM,iBAAkB,CACpBC,OAAQ,OACRC,KAAMN,IAELO,KAAK,SAACC,GACP,GAAIA,EAASC,IAA0B,MAApBD,EAASmB,OACnB,IAAInB,EAASC,IAA0B,MAApBD,EAASmB,OAChC,OAAOnB,EADyC,MAAM,IAAIG,MAAM,yCADzB,MAAM,IAAIA,MAAM,gCAI3DJ,KAAK,SAACP,GACHwC,EAAKa,aAAa,WACdN,EAAKpD,SAAS,CAAEyF,oBAAoB,QAG3CtE,MAAM,SAACC,GACJF,MAAME,MA3BdgC,EAAK5C,MAAQ,CAACiF,oBAAoB,EAC9BxB,SAAU,GACVyB,SAAU,IAEdtC,EAAKyC,kBAAoBzC,EAAKyC,kBAAkBC,KAAvBtG,OAAAuG,EAAA,EAAAvG,QAAAuG,EAAA,EAAAvG,CAAA4D,KACzBA,EAAKuC,MAAQvC,EAAKuC,MAAMG,KAAXtG,OAAAuG,EAAA,EAAAvG,QAAAuG,EAAA,EAAAvG,CAAA4D,KAPEA,iFAiCDrD,GACd,IAAMG,EAASH,EAAMG,OACfmC,EAAQnC,EAAOmC,MACfU,EAAO7C,EAAO6C,KAGpBrD,KAAKM,SAALR,OAAAwG,EAAA,EAAAxG,CAAA,GACKuD,EAAOV,qCAIP,IACC+C,GAAS1F,KAAKJ,MAAM+F,SAAS7E,OAAS,CAAE4E,KAAM,CAAED,SAAU,OAA1DC,KAGN,OAF6B1F,KAAKc,MAA5BiF,mBAEyBpE,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CAAUC,GAAIE,IAGzC/D,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,QAAM0E,SAAUvG,KAAKiG,OACjBtE,EAAAC,EAAAC,cAAA,yBAEIF,EAAAC,EAAAC,cAAA,SACIwB,KAAK,WACLvB,KAAK,OACLa,MAAO3C,KAAKc,MAAMyD,SAClBvC,SAAUhC,KAAKmG,qBAGvBxE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,yBAEIF,EAAAC,EAAAC,cAAA,SACIwB,KAAK,WACLvB,KAAK,WACLa,MAAO3C,KAAKc,MAAMkF,SAClBhE,SAAUhC,KAAKmG,qBAEvBxE,EAAAC,EAAAC,cAAA,SAAOC,KAAK,SAASa,MAAM,oBA/E3B6D,IAAMtE,WAsFpBuE,cAEF,SAAAA,EAAY7G,GAAO,IAAA8G,EAAA,OAAA5G,OAAAC,EAAA,EAAAD,CAAAE,KAAAyG,IACfC,EAAA5G,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2G,GAAAtG,KAAAH,KAAMJ,KACDkB,MAAQ,CACTyD,SAAU,GACVyB,SAAU,GACVxB,KAAM,aAGVkC,EAAKP,kBAAoBO,EAAKP,kBAAkBC,KAAvBtG,OAAAuG,EAAA,EAAAvG,QAAAuG,EAAA,EAAAvG,CAAA4G,KARVA,iFAWDrG,GACd,IAAMG,EAASH,EAAMG,OACfmC,EAAQnC,EAAOmC,MACfU,EAAO7C,EAAO6C,KAEpBrD,KAAKM,SAALR,OAAAwG,EAAA,EAAAxG,CAAA,GACKuD,EAAOV,qCAKZ,OACIhB,EAAAC,EAAAC,cAAA,QAAM0E,SAAUvG,KAAK2G,cACjBhF,EAAAC,EAAAC,cAAA,yBAEIF,EAAAC,EAAAC,cAAA,SACIwB,KAAK,WACLvB,KAAK,OACLa,MAAO3C,KAAKc,MAAMyD,SAClBvC,SAAUhC,KAAKmG,qBAEvBxE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,yBAEIF,EAAAC,EAAAC,cAAA,SACIwB,KAAK,WACLvB,KAAK,WACLa,MAAO3C,KAAKc,MAAMkF,SAClBhE,SAAUhC,KAAKmG,qBAEvBxE,EAAAC,EAAAC,cAAA,kCAEIF,EAAAC,EAAAC,cAAA,UAAQwB,KAAK,OACLV,MAAO3C,KAAKc,MAAM0D,KAClBxC,SAAUhC,KAAKmG,mBACnBxE,EAAAC,EAAAC,cAAA,UAAQc,MAAM,aAAd,QACCQ,EAAKW,MAAQnC,EAAAC,EAAAC,cAAA,UAAQc,MAAM,cAAd,SAA4C,OAGlEhB,EAAAC,EAAAC,cAAA,SAAOC,KAAK,SAASa,MAAM,iDAK1BtC,GACTA,EAAM6F,iBACN,IAAMvF,EAAO,IAAIC,SAASP,EAAMG,QAEhCO,MAAM,gBAAiB,CACnBC,OAAQ,OACRC,KAAMN,IAEVO,KAAK,SAACC,GACF,OAAIA,EAASC,GAGFD,EAFAA,EAASE,SAIxBH,KAAK,SAACC,GACF,GAAIA,EAASC,GACR,OAAOD,EADK,MAAM,IAAIG,MAAMH,EAASI,WAGzCL,KAAK,SAACP,GACHa,MAAM,kBAETC,MAAM,SAACC,GACJF,MAAME,YA/ECQ,aAoFR0E,EAtRf,WACI,OACIjF,EAAAC,EAAAC,cAACgF,EAAA,EAAD,KACIlF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC6C,EAAD,MACA/C,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CAAMtB,GAAG,WAAT,WAEJ7D,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CAAMtB,GAAG,gBAAT,iBAEJ7D,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CAAMtB,GAAG,aAAT,cAGR7D,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAO2B,KAAK,UAAU9B,UAAWW,IACjCjE,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAO2B,KAAK,SAAS9B,UAAWa,IAChCnE,EAAAC,EAAAC,cAACkD,EAAD,CAAcgC,KAAK,aAAa9B,UAAWY,IAC3ClE,EAAAC,EAAAC,cAACkD,EAAD,CAAcgC,KAAK,UAAU9B,UAAW9C,IACxCR,EAAAC,EAAAC,cAACkD,EAAD,CAAcgC,KAAK,eAAe9B,UAAWtF,IAC7CgC,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAO2B,KAAK,YAAY9B,UAAWwB,OCpBpCO,mLARX,OACIrF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACoF,EAAD,cAJM/E,aCElBoD,iBACI3D,EAAAC,EAAAC,cAACgF,EAAA,EAAD,KACIlF,EAAAC,EAAAC,cAACqF,EAAD,OAELC,SAASC,eAAe","file":"static/js/main.161d3450.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nclass ImageUpload extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { picture: null };\n    }\n\n    imageChosen = event => {\n        this.setState({\n            picture: event.target.files[0],\n        });\n    }\n\n    uploadImage = () => {\n        let data = new FormData()\n        data.append('file', this.state.picture)\n        fetch('/uploadImage', {\n            method: 'POST',\n            body: data\n        }).then((response) => {\n            if(!response.ok)\n                return response.json();\n            else\n                return response;\n        }).then((response) => {\n            if(!response.ok) throw new Error(response.message);\n            else return response;\n        }).then((data) => {\n                alert(\"Image uploaded\");\n        }).catch((error) => {\n                alert(error);\n            });\n    }\n\n    render() {\n        return (\n            <div>\n            <input type=\"file\" accept=\".gif,.jpg,.jpeg,.png\" onChange={this.imageChosen}/>\n                <button onClick={this.uploadImage}>upload</button>\n            </div>\n\n        );\n    }\n}\n\nexport default ImageUpload","import React, { Component } from 'react'\n\n\nclass Images extends Component {\n\n\n    constructor(props) {\n        super(props);\n        this.state = { images: [] };\n    }\n    componentDidMount() {\n        fetch('getAllImages', {\n            method: 'get',\n        })\n            .then((response) => {\n            if (response.status == 200) {\n                return response.json()\n            }\n        })\n            .then((responseData) => {\n                this.setState({images: responseData});\n            })\n\n    }\n\n    deleteImage = (imageName) => {\n        fetch('/deleteImage/' + imageName, {\n            method: 'DELETE',\n        }).then((response) => {\n            if(!response.ok) throw new Error(response.status);\n            else return response;\n        }).then((data) => {\n            this.componentDidMount();\n        }).catch((error) => {\n            console.log('error: ' + error);\n        });\n\n    }\n\n     Item = (props) => {\n        return <li>{props.value}</li>;\n    }\n\n    MyList = (items) => {\n        return (\n            <div>\n                {items.map((item) =>\n                    <div>\n                        <img src={\"data:image/jpeg;base64,\" + item.base64} height={500}/><br/>\n                        {this.props.auth ? <div><text>Uploader: {item.uploader}</text><br/>\n                            <text>Filename: {item.name.split('.').slice(0, -1).join('.')}</text>\n                        <button onClick={()=>this.deleteImage(item.name)}>Delete</button></div> : <br/>}\n                    </div>)}\n            </div>\n        );\n    }\n\n    render() {\n        if (!this.state.images || !this.state.images.length)\n            return null;\n        return (\n            <div>\n                {this.MyList(this.state.images)}\n            </div>\n\n        );\n    }\n}\n\nexport default Images","import React, {Component} from \"react\";\nimport {\n    BrowserRouter as Router,\n    Route,\n    Link,\n    Redirect,\n    withRouter\n} from \"react-router-dom\";\n\nimport ImageUpload from './ImageUpload'\nimport Images from './Images'\n\nfunction Auth() {\n    return (\n        <Router>\n            <div>\n                <AuthButton />\n                <ul>\n                    <li>\n                        <Link to=\"/images\">Images</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/imageUpload\">Upload Image</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/register\">Register</Link>\n                    </li>\n                </ul>\n                <Route path=\"/public\" component={Public} />\n                <Route path=\"/login\" component={Login} />\n                <PrivateRoute path=\"/protected\" component={Protected} />\n                <PrivateRoute path='/images' component={Images}/>\n                <PrivateRoute path='/imageUpload' component={ImageUpload}/>\n                <Route path='/register' component={Register}/>\n            </div>\n        </Router>\n    );\n}\n\nconst auth = {\n    user: \"\",\n    admin: false,\n    isAuthenticated: false,\n    authenticate(cb) {\n        this.isAuthenticated = true;\n        this.getRole(cb);\n    },\n    signout(cb) {\n        this.user = \"\";\n        this.admin = false;\n        this.isAuthenticated = false;\n        cb();\n    },\n    getRole(cb){\n        fetch('/roles', {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            }\n        }).then((response) => {\n            if (response.status === 200) {\n                return response.json()\n            }\n        })\n            .then((responseData) => {\n                this.user = responseData.username;\n                if(this.role = responseData.authorities[0].name === \"ROLE_ADMIN\")\n                    this.admin = true;\n                cb();\n            })\n    }\n};\n\nconst AuthButton = withRouter(\n    ({ history }) =>\n        auth.isAuthenticated ? (\n            <p>\n                Welcome {auth.user}!\n                <button\n                    onClick={() => {\n                        auth.signout(() => history.push(\"/\"));\n                    }}\n                >\n                    Sign out\n                </button>\n            </p>\n        ) : (\n            <p>You are not logged in.</p>\n        )\n);\n\nfunction PrivateRoute({ component: Component, ...rest }) {\n    return (\n        <Route\n            {...rest}\n            render={props =>\n                auth.isAuthenticated ? (\n                    <Component {...props} auth={auth.admin}/>\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: \"/login\",\n                            state: { from: props.location }\n                        }}\n                    />\n                )\n            }\n        />\n    );\n}\n\nfunction Public() {\n    return <h3>Public</h3>;\n}\n\nfunction Protected() {\n    return <h3>Protected</h3>;\n}\n\nclass Login extends React.Component {\n\n    state = {\n            redirectToReferrer: false,\n            username: \"\",\n            password: \"\",\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {redirectToReferrer: false,\n            username: \"\",\n            password: \"\",};\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.login = this.login.bind(this);\n    }\n\n\n    login = (event) => {\n        event.preventDefault();\n        const data = new FormData(event.target);\n        fetch('/perform_login', {\n            method: 'POST',\n            body: data,\n        })\n            .then((response) => {\n            if(!response.ok && response.status === 401) throw new Error(\"Wrong username or password\");\n                else if(!response.ok && response.status === 500) throw new Error(\"Server error, please try again later.\");\n            else return response;\n        })\n            .then((data) => {\n                auth.authenticate(() => {\n                    this.setState({ redirectToReferrer: true });\n                });\n            })\n            .catch((error) => {\n                alert(error)\n            });\n    };\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n\n        this.setState({\n            [name]: value\n        });\n    }\n\n    render() {\n        let { from } = this.props.location.state || { from: { pathname: \"/\" } };\n        let { redirectToReferrer } = this.state;\n\n        if (redirectToReferrer) return <Redirect to={from} />;\n\n        return (\n            <div>\n                <form onSubmit={this.login}>\n                    <label>\n                        Username:\n                        <input\n                            name=\"username\"\n                            type=\"text\"\n                            value={this.state.username}\n                            onChange={this.handleInputChange}/>\n\n                    </label>\n                    <br />\n                    <label>\n                        Password:\n                        <input\n                            name=\"password\"\n                            type=\"password\"\n                            value={this.state.password}\n                            onChange={this.handleInputChange}/>\n                    </label>\n                    <input type=\"submit\" value=\"Submit\" />\n                </form>\n            </div>\n        );\n    }\n}\n\nclass Register extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: \"\",\n            password: \"\",\n            role: \"ROLE_USER\",\n        };\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value\n        });\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <label>\n                    Username:\n                    <input\n                        name=\"username\"\n                        type=\"text\"\n                        value={this.state.username}\n                        onChange={this.handleInputChange} />\n                </label>\n                <br />\n                <label>\n                    Password:\n                    <input\n                        name=\"password\"\n                        type=\"password\"\n                        value={this.state.password}\n                        onChange={this.handleInputChange} />\n                </label>\n                <label>\n                    Choose privileges:\n                    <select name=\"role\"\n                            value={this.state.role}\n                            onChange={this.handleInputChange}>\n                        <option value=\"ROLE_USER\">USER</option>\n                        {auth.admin ? <option value=\"ROLE_ADMIN\">ADMIN</option> : null}\n                    </select>\n                </label>\n                <input type=\"submit\" value=\"Submit\" />\n            </form>\n        );\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        const data = new FormData(event.target);\n\n        fetch('/registration', {\n            method: 'POST',\n            body: data,\n        }).\n        then((response) => {\n            if(!response.ok)\n                return response.json();\n            else\n                return response;\n        }).\n        then((response) => {\n            if(!response.ok) throw new Error(response.message);\n            else return response;\n        })\n            .then((data) => {\n                alert(\"User created\");\n            })\n            .catch((error) => {\n                alert(error);\n            });\n    }\n}\n\nexport default Auth;","import React, { Component } from 'react';\nimport Main from './Main'\n\nclass App extends Component {\n  render() {\n    return (\n        <div>\n            <Main />\n        </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport App from './App';\n\nrender((\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n), document.getElementById('root'));\n"],"sourceRoot":""}